{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "DELAY_PERIOD",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "contracts",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "delegateProxyImplementation",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "endGrantAuthentication",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "pending",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"name": "proxies",
				"outputs": [
					{
						"internalType": "contract OwnableDelegateProxy",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "registerProxy",
				"outputs": [
					{
						"internalType": "contract OwnableDelegateProxy",
						"name": "proxy",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "user",
						"type": "address"
					}
				],
				"name": "registerProxyFor",
				"outputs": [
					{
						"internalType": "contract OwnableDelegateProxy",
						"name": "proxy",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "registerProxyOverride",
				"outputs": [
					{
						"internalType": "contract OwnableDelegateProxy",
						"name": "proxy",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "revokeAuthentication",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "addr",
						"type": "address"
					}
				],
				"name": "startGrantAuthentication",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "from",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "to",
						"type": "address"
					}
				],
				"name": "transferAccessTo",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Wyvern Protocol Developers",
			"kind": "dev",
			"methods": {
				"endGrantAuthentication(address)": {
					"details": "ProxyRegistry owner only",
					"params": {
						"addr": "Address to which to grant permissions"
					}
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"registerProxy()": {
					"details": "Must be called by the user which the proxy is for, creates a new AuthenticatedProxy",
					"returns": {
						"proxy": "New AuthenticatedProxy contract"
					}
				},
				"registerProxyFor(address)": {
					"details": "Can be called by any user",
					"returns": {
						"proxy": "New AuthenticatedProxy contract"
					}
				},
				"registerProxyOverride()": {
					"details": "Must be called by the user which the proxy is for, creates a new AuthenticatedProxy",
					"returns": {
						"proxy": "New AuthenticatedProxy contract"
					}
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"revokeAuthentication(address)": {
					"details": "ProxyRegistry owner only",
					"params": {
						"addr": "Address of which to revoke permissions"
					}
				},
				"startGrantAuthentication(address)": {
					"details": "ProxyRegistry owner only",
					"params": {
						"addr": "Address to which to grant permissions"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				}
			},
			"title": "ProxyRegistry",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"endGrantAuthentication(address)": {
					"notice": "End the process to enable access for specified contract after delay period has passed."
				},
				"registerProxy()": {
					"notice": "Register a proxy contract with this registry"
				},
				"registerProxyFor(address)": {
					"notice": "Register a proxy contract with this registry"
				},
				"registerProxyOverride()": {
					"notice": "Register a proxy contract with this registry, overriding any existing proxy"
				},
				"revokeAuthentication(address)": {
					"notice": "Revoke access for specified contract. Can be done instantly."
				},
				"startGrantAuthentication(address)": {
					"notice": "Start the process to enable access for specified contract. Subject to delay period."
				},
				"transferAccessTo(address,address)": {
					"notice": "Transfer access"
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/registry/ProxyRegistry.sol": "ProxyRegistry"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": false,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/lib/access/Ownable.sol": {
			"keccak256": "0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c",
			"license": "MIT",
			"urls": [
				"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7",
				"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ"
			]
		},
		"contracts/lib/utils/Context.sol": {
			"keccak256": "0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395",
				"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN"
			]
		},
		"contracts/registry/OwnableDelegateProxy.sol": {
			"keccak256": "0xe931c56a1445603e1c843f020dbfb4ac46c7c4eb87597b9b75c6eeb5d23b0c3e",
			"license": "MIT",
			"urls": [
				"bzz-raw://e1150832e030332960a239296ba7d6e1ecd9102eb735690e6c5027235cbfd10c",
				"dweb:/ipfs/QmZef3m5z3fzHUuuDVpRt5ACUfH6mczAFPqXUCnM5dRqwo"
			]
		},
		"contracts/registry/ProxyRegistry.sol": {
			"keccak256": "0x0b23efcb37f859df14a42fe1d8983bc91c28004d17bd721feccc4c5a48d5a5ed",
			"license": "MIT",
			"urls": [
				"bzz-raw://1a16fb6205397ff491988b68620b83ba2d8e5869385b80a5682c38c0d4b924ce",
				"dweb:/ipfs/QmX4gQZWaDdqKT1y2MzUGmw4tFFCQa5LM3x1jPAEeg3drU"
			]
		},
		"contracts/registry/ProxyRegistryInterface.sol": {
			"keccak256": "0x4f818bc816a40e485dcd899030d3bb67172c6f9e26714d89a0b1d9d27ce4fea9",
			"license": "MIT",
			"urls": [
				"bzz-raw://bb0b1d9c0b7dfb681a3071ddcc3e5fb2aa5484308485cee12e54ab9fda4963cb",
				"dweb:/ipfs/QmfMtyBfpUQWvx3mYvtyyLo1xmM2E9rbpPhuMyEEPP7spS"
			]
		},
		"contracts/registry/proxy/OwnedUpgradeabilityProxy.sol": {
			"keccak256": "0x9c15dcd284d3e8de4619e13cbc610b9c0ef3d272b0b535e3c60a2200af87e2b7",
			"license": "MIT",
			"urls": [
				"bzz-raw://d72301ecfc1e44a51b3dc37817f33006de921723ba67cd1097aa5b62d2c50444",
				"dweb:/ipfs/QmbMvUpjod1xke6qUjuaeWeoJc9U31tkuAr8caNQB1GH29"
			]
		},
		"contracts/registry/proxy/OwnedUpgradeabilityStorage.sol": {
			"keccak256": "0xca24ed3f077a8589f876e1281cca8a0f69ea8adb0dca184b3d4859f471b0fb52",
			"license": "MIT",
			"urls": [
				"bzz-raw://9a6f4f8e9a914d5efaeb4a2111fbe157932d39954572b190f5ba85a8eb47e228",
				"dweb:/ipfs/QmfAKTy3Exry89T4Mzc2dHAkLRjB1UPqtcEHNgcDrkZWQP"
			]
		},
		"contracts/registry/proxy/Proxy.sol": {
			"keccak256": "0x5ad379da68e3fe7eb0cbe7f362b0bddf5025c42644313dc1a8b15aab12067563",
			"license": "MIT",
			"urls": [
				"bzz-raw://d605552f473e880febffa6ecbe13d5bf6afd368e9cb5e09e43a8aef774e88099",
				"dweb:/ipfs/QmRKmWf2qAjNqp3LALGxpTS9eBKCtPyQgyteZ2k9wEnCdc"
			]
		}
	},
	"version": 1
}