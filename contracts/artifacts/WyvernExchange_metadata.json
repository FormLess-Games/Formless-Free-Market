{
	"compiler": {
		"version": "0.8.4+commit.c7e474f2"
	},
	"language": "Solidity",
	"output": {
		"abi": [
			{
				"inputs": [
					{
						"internalType": "contract ProxyRegistry",
						"name": "registryAddress",
						"type": "address"
					},
					{
						"internalType": "contract TokenTransferProxy",
						"name": "tokenTransferProxyAddress",
						"type": "address"
					},
					{
						"internalType": "contract ERC20",
						"name": "tokenAddress",
						"type": "address"
					},
					{
						"internalType": "address",
						"name": "protocolFeeAddress",
						"type": "address"
					}
				],
				"stateMutability": "nonpayable",
				"type": "constructor"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "exchange",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "maker",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "taker",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "makerRelayerFee",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "takerRelayerFee",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "makerProtocolFee",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "takerProtocolFee",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "feeRecipient",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "enum ExchangeCore.FeeMethod",
						"name": "feeMethod",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "enum SaleKindInterface.Side",
						"name": "side",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "enum SaleKindInterface.SaleKind",
						"name": "saleKind",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "target",
						"type": "address"
					}
				],
				"name": "OrderApprovedPartOne",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "enum AuthenticatedProxy.HowToCall",
						"name": "howToCall",
						"type": "uint8"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "callData",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "replacementPattern",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "staticTarget",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "bytes",
						"name": "staticExtradata",
						"type": "bytes"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "paymentToken",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "basePrice",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "extra",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "listingTime",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "expirationTime",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "salt",
						"type": "uint256"
					},
					{
						"indexed": false,
						"internalType": "bool",
						"name": "orderbookInclusionDesired",
						"type": "bool"
					}
				],
				"name": "OrderApprovedPartTwo",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "hash",
						"type": "bytes32"
					}
				],
				"name": "OrderCancelled",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "buyHash",
						"type": "bytes32"
					},
					{
						"indexed": false,
						"internalType": "bytes32",
						"name": "sellHash",
						"type": "bytes32"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "maker",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "taker",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "uint256",
						"name": "price",
						"type": "uint256"
					},
					{
						"indexed": true,
						"internalType": "bytes32",
						"name": "metadata",
						"type": "bytes32"
					}
				],
				"name": "OrdersMatched",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": true,
						"internalType": "address",
						"name": "previousOwner",
						"type": "address"
					},
					{
						"indexed": true,
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "OwnershipTransferred",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Paused",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "oldTokenAddress",
						"type": "address"
					},
					{
						"indexed": false,
						"internalType": "address",
						"name": "newTokenAddress",
						"type": "address"
					}
				],
				"name": "ProtocolTokenFeeChange",
				"type": "event"
			},
			{
				"anonymous": false,
				"inputs": [
					{
						"indexed": false,
						"internalType": "address",
						"name": "account",
						"type": "address"
					}
				],
				"name": "Unpaused",
				"type": "event"
			},
			{
				"inputs": [],
				"name": "INVERSE_BASIS_POINT",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[7]",
						"name": "addrs",
						"type": "address[7]"
					},
					{
						"internalType": "uint256[9]",
						"name": "uints",
						"type": "uint256[9]"
					},
					{
						"internalType": "enum ExchangeCore.FeeMethod",
						"name": "feeMethod",
						"type": "uint8"
					},
					{
						"internalType": "enum SaleKindInterface.Side",
						"name": "side",
						"type": "uint8"
					},
					{
						"internalType": "enum SaleKindInterface.SaleKind",
						"name": "saleKind",
						"type": "uint8"
					},
					{
						"internalType": "enum AuthenticatedProxy.HowToCall",
						"name": "howToCall",
						"type": "uint8"
					},
					{
						"internalType": "bytes",
						"name": "callData",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "replacementPattern",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "staticExtradata",
						"type": "bytes"
					},
					{
						"internalType": "bool",
						"name": "orderbookInclusionDesired",
						"type": "bool"
					}
				],
				"name": "approveOrder_",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "approvedOrders",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[14]",
						"name": "addrs",
						"type": "address[14]"
					},
					{
						"internalType": "uint256[18]",
						"name": "uints",
						"type": "uint256[18]"
					},
					{
						"internalType": "uint8[8]",
						"name": "feeMethodsSidesKindsHowToCalls",
						"type": "uint8[8]"
					},
					{
						"internalType": "bytes",
						"name": "callDataBuy",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "callDataSell",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "replacementPatternBuy",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "replacementPatternSell",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "staticExtradataBuy",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "staticExtradataSell",
						"type": "bytes"
					},
					{
						"internalType": "uint8[2]",
						"name": "vs",
						"type": "uint8[2]"
					},
					{
						"internalType": "bytes32[5]",
						"name": "rssMetadata",
						"type": "bytes32[5]"
					}
				],
				"name": "atomicMatch_",
				"outputs": [],
				"stateMutability": "payable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[7]",
						"name": "addrs",
						"type": "address[7]"
					},
					{
						"internalType": "uint256[9]",
						"name": "uints",
						"type": "uint256[9]"
					},
					{
						"internalType": "enum ExchangeCore.FeeMethod",
						"name": "feeMethod",
						"type": "uint8"
					},
					{
						"internalType": "enum SaleKindInterface.Side",
						"name": "side",
						"type": "uint8"
					},
					{
						"internalType": "enum SaleKindInterface.SaleKind",
						"name": "saleKind",
						"type": "uint8"
					},
					{
						"internalType": "enum AuthenticatedProxy.HowToCall",
						"name": "howToCall",
						"type": "uint8"
					},
					{
						"internalType": "bytes",
						"name": "callData",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "replacementPattern",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "staticExtradata",
						"type": "bytes"
					}
				],
				"name": "calculateCurrentPrice_",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[14]",
						"name": "addrs",
						"type": "address[14]"
					},
					{
						"internalType": "uint256[18]",
						"name": "uints",
						"type": "uint256[18]"
					},
					{
						"internalType": "uint8[8]",
						"name": "feeMethodsSidesKindsHowToCalls",
						"type": "uint8[8]"
					},
					{
						"internalType": "bytes",
						"name": "callDataBuy",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "callDataSell",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "replacementPatternBuy",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "replacementPatternSell",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "staticExtradataBuy",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "staticExtradataSell",
						"type": "bytes"
					}
				],
				"name": "calculateMatchPrice_",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[7]",
						"name": "addrs",
						"type": "address[7]"
					},
					{
						"internalType": "uint256[9]",
						"name": "uints",
						"type": "uint256[9]"
					},
					{
						"internalType": "enum ExchangeCore.FeeMethod",
						"name": "feeMethod",
						"type": "uint8"
					},
					{
						"internalType": "enum SaleKindInterface.Side",
						"name": "side",
						"type": "uint8"
					},
					{
						"internalType": "enum SaleKindInterface.SaleKind",
						"name": "saleKind",
						"type": "uint8"
					},
					{
						"internalType": "enum AuthenticatedProxy.HowToCall",
						"name": "howToCall",
						"type": "uint8"
					},
					{
						"internalType": "bytes",
						"name": "callData",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "replacementPattern",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "staticExtradata",
						"type": "bytes"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "cancelOrder_",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"name": "cancelledOrFinalized",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newMinimumMakerProtocolFee",
						"type": "uint256"
					}
				],
				"name": "changeMinimumMakerProtocolFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "uint256",
						"name": "newMinimumTakerProtocolFee",
						"type": "uint256"
					}
				],
				"name": "changeMinimumTakerProtocolFee",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newProtocolFeeRecipient",
						"type": "address"
					}
				],
				"name": "changeProtocolFeeRecipient",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newTokenAddress",
						"type": "address"
					}
				],
				"name": "changeProtocolFeeTokenAddress",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "codename",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "exchangeToken",
				"outputs": [
					{
						"internalType": "contract ERC20",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[7]",
						"name": "addrs",
						"type": "address[7]"
					},
					{
						"internalType": "uint256[9]",
						"name": "uints",
						"type": "uint256[9]"
					},
					{
						"internalType": "enum ExchangeCore.FeeMethod",
						"name": "feeMethod",
						"type": "uint8"
					},
					{
						"internalType": "enum SaleKindInterface.Side",
						"name": "side",
						"type": "uint8"
					},
					{
						"internalType": "enum SaleKindInterface.SaleKind",
						"name": "saleKind",
						"type": "uint8"
					},
					{
						"internalType": "enum AuthenticatedProxy.HowToCall",
						"name": "howToCall",
						"type": "uint8"
					},
					{
						"internalType": "bytes",
						"name": "callData",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "replacementPattern",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "staticExtradata",
						"type": "bytes"
					}
				],
				"name": "hashOrder_",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[7]",
						"name": "addrs",
						"type": "address[7]"
					},
					{
						"internalType": "uint256[9]",
						"name": "uints",
						"type": "uint256[9]"
					},
					{
						"internalType": "enum ExchangeCore.FeeMethod",
						"name": "feeMethod",
						"type": "uint8"
					},
					{
						"internalType": "enum SaleKindInterface.Side",
						"name": "side",
						"type": "uint8"
					},
					{
						"internalType": "enum SaleKindInterface.SaleKind",
						"name": "saleKind",
						"type": "uint8"
					},
					{
						"internalType": "enum AuthenticatedProxy.HowToCall",
						"name": "howToCall",
						"type": "uint8"
					},
					{
						"internalType": "bytes",
						"name": "callData",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "replacementPattern",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "staticExtradata",
						"type": "bytes"
					}
				],
				"name": "hashToSign_",
				"outputs": [
					{
						"internalType": "bytes32",
						"name": "",
						"type": "bytes32"
					}
				],
				"stateMutability": "pure",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minimumMakerProtocolFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "minimumTakerProtocolFee",
				"outputs": [
					{
						"internalType": "uint256",
						"name": "",
						"type": "uint256"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "name",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "owner",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "pause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "paused",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "protocolFeeRecipient",
				"outputs": [
					{
						"internalType": "address",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "registry",
				"outputs": [
					{
						"internalType": "contract ProxyRegistry",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "renounceOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "target",
						"type": "address"
					},
					{
						"internalType": "bytes",
						"name": "callData",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "extradata",
						"type": "bytes"
					}
				],
				"name": "staticCall",
				"outputs": [
					{
						"internalType": "bool",
						"name": "result",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "tokenTransferProxy",
				"outputs": [
					{
						"internalType": "contract TokenTransferProxy",
						"name": "",
						"type": "address"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address",
						"name": "newOwner",
						"type": "address"
					}
				],
				"name": "transferOwnership",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "unPause",
				"outputs": [],
				"stateMutability": "nonpayable",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[7]",
						"name": "addrs",
						"type": "address[7]"
					},
					{
						"internalType": "uint256[9]",
						"name": "uints",
						"type": "uint256[9]"
					},
					{
						"internalType": "enum ExchangeCore.FeeMethod",
						"name": "feeMethod",
						"type": "uint8"
					},
					{
						"internalType": "enum SaleKindInterface.Side",
						"name": "side",
						"type": "uint8"
					},
					{
						"internalType": "enum SaleKindInterface.SaleKind",
						"name": "saleKind",
						"type": "uint8"
					},
					{
						"internalType": "enum AuthenticatedProxy.HowToCall",
						"name": "howToCall",
						"type": "uint8"
					},
					{
						"internalType": "bytes",
						"name": "callData",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "replacementPattern",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "staticExtradata",
						"type": "bytes"
					}
				],
				"name": "validateOrderParameters_",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [
					{
						"internalType": "address[7]",
						"name": "addrs",
						"type": "address[7]"
					},
					{
						"internalType": "uint256[9]",
						"name": "uints",
						"type": "uint256[9]"
					},
					{
						"internalType": "enum ExchangeCore.FeeMethod",
						"name": "feeMethod",
						"type": "uint8"
					},
					{
						"internalType": "enum SaleKindInterface.Side",
						"name": "side",
						"type": "uint8"
					},
					{
						"internalType": "enum SaleKindInterface.SaleKind",
						"name": "saleKind",
						"type": "uint8"
					},
					{
						"internalType": "enum AuthenticatedProxy.HowToCall",
						"name": "howToCall",
						"type": "uint8"
					},
					{
						"internalType": "bytes",
						"name": "callData",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "replacementPattern",
						"type": "bytes"
					},
					{
						"internalType": "bytes",
						"name": "staticExtradata",
						"type": "bytes"
					},
					{
						"internalType": "uint8",
						"name": "v",
						"type": "uint8"
					},
					{
						"internalType": "bytes32",
						"name": "r",
						"type": "bytes32"
					},
					{
						"internalType": "bytes32",
						"name": "s",
						"type": "bytes32"
					}
				],
				"name": "validateOrder_",
				"outputs": [
					{
						"internalType": "bool",
						"name": "",
						"type": "bool"
					}
				],
				"stateMutability": "view",
				"type": "function"
			},
			{
				"inputs": [],
				"name": "version",
				"outputs": [
					{
						"internalType": "string",
						"name": "",
						"type": "string"
					}
				],
				"stateMutability": "view",
				"type": "function"
			}
		],
		"devdoc": {
			"author": "Wyvern Protocol Developers",
			"kind": "dev",
			"methods": {
				"approveOrder_(address[7],uint256[9],uint8,uint8,uint8,uint8,bytes,bytes,bytes,bool)": {
					"details": "Call approveOrder - Solidity ABI encoding limitation workaround, hopefully temporary."
				},
				"atomicMatch_(address[14],uint256[18],uint8[8],bytes,bytes,bytes,bytes,bytes,bytes,uint8[2],bytes32[5])": {
					"details": "Call atomicMatch - Solidity ABI encoding limitation workaround, hopefully temporary."
				},
				"calculateCurrentPrice_(address[7],uint256[9],uint8,uint8,uint8,uint8,bytes,bytes,bytes)": {
					"details": "Call calculateCurrentPrice - Solidity ABI encoding limitation workaround, hopefully temporary."
				},
				"calculateMatchPrice_(address[14],uint256[18],uint8[8],bytes,bytes,bytes,bytes,bytes,bytes)": {
					"details": "Call calculateMatchPrice - Solidity ABI encoding limitation workaround, hopefully temporary."
				},
				"cancelOrder_(address[7],uint256[9],uint8,uint8,uint8,uint8,bytes,bytes,bytes,uint8,bytes32,bytes32)": {
					"details": "Call cancelOrder - Solidity ABI encoding limitation workaround, hopefully temporary."
				},
				"changeMinimumMakerProtocolFee(uint256)": {
					"details": "Change the minimum maker fee paid to the protocol (owner only)",
					"params": {
						"newMinimumMakerProtocolFee": "New fee to set in basis points"
					}
				},
				"changeMinimumTakerProtocolFee(uint256)": {
					"details": "Change the minimum taker fee paid to the protocol (owner only)",
					"params": {
						"newMinimumTakerProtocolFee": "New fee to set in basis points"
					}
				},
				"changeProtocolFeeRecipient(address)": {
					"details": "Change the protocol fee recipient (owner only)",
					"params": {
						"newProtocolFeeRecipient": "New protocol fee recipient address"
					}
				},
				"changeProtocolFeeTokenAddress(address)": {
					"details": "Change the protocol fee token address (owner only)",
					"params": {
						"newTokenAddress": "New protocol fee token address"
					}
				},
				"constructor": {
					"details": "Initialize a WyvernExchange instance",
					"params": {
						"registryAddress": "Address of the registry instance which this Exchange instance will use",
						"tokenAddress": "Address of the token used for protocol fees"
					}
				},
				"hashOrder_(address[7],uint256[9],uint8,uint8,uint8,uint8,bytes,bytes,bytes)": {
					"details": "Call hashOrder - Solidity ABI encoding limitation workaround, hopefully temporary."
				},
				"hashToSign_(address[7],uint256[9],uint8,uint8,uint8,uint8,bytes,bytes,bytes)": {
					"details": "Call hashToSign - Solidity ABI encoding limitation workaround, hopefully temporary."
				},
				"owner()": {
					"details": "Returns the address of the current owner."
				},
				"pause()": {
					"details": "Pause the contract in case of bugs/attacks."
				},
				"paused()": {
					"details": "Returns true if the contract is paused, and false otherwise."
				},
				"renounceOwnership()": {
					"details": "Leaves the contract without owner. It will not be possible to call `onlyOwner` functions anymore. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby removing any functionality that is only available to the owner."
				},
				"staticCall(address,bytes,bytes)": {
					"details": "Execute a STATICCALL (introduced with Ethereum Metropolis, non-state-modifying external call)",
					"params": {
						"callData": "Calldata (appended to extradata)",
						"extradata": "Base data for STATICCALL (probably function selector and argument encoding)",
						"target": "Contract to call"
					},
					"returns": {
						"result": "of the call (success or failure)"
					}
				},
				"transferOwnership(address)": {
					"details": "Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner."
				},
				"unPause()": {
					"details": "Resume the contract after being paused."
				},
				"validateOrderParameters_(address[7],uint256[9],uint8,uint8,uint8,uint8,bytes,bytes,bytes)": {
					"details": "Call validateOrderParameters - Solidity ABI encoding limitation workaround, hopefully temporary."
				},
				"validateOrder_(address[7],uint256[9],uint8,uint8,uint8,uint8,bytes,bytes,bytes,uint8,bytes32,bytes32)": {
					"details": "Call validateOrder - Solidity ABI encoding limitation workaround, hopefully temporary."
				}
			},
			"title": "WyvernExchange",
			"version": 1
		},
		"userdoc": {
			"kind": "user",
			"methods": {
				"pause()": {
					"notice": "Only the owner can call this method."
				},
				"unPause()": {
					"notice": "Only the owner can call this method."
				}
			},
			"version": 1
		}
	},
	"settings": {
		"compilationTarget": {
			"contracts/WyvernExchange.sol": "WyvernExchange"
		},
		"evmVersion": "istanbul",
		"libraries": {},
		"metadata": {
			"bytecodeHash": "ipfs"
		},
		"optimizer": {
			"enabled": true,
			"runs": 200
		},
		"remappings": []
	},
	"sources": {
		"contracts/WyvernExchange.sol": {
			"keccak256": "0xbb9dcb4bd4431e004129b2e5804bf1ad11bb1c10ed193a5904d504bb8ecce7fc",
			"license": "MIT",
			"urls": [
				"bzz-raw://4672bd20bbfa243aaa61029628dcef2e42012710ba4cc1de9f31b0d3036d0a51",
				"dweb:/ipfs/QmfMGsEEQoX2egu5AE9nbsepUXMLcwE14X2AvpHTLhd1s8"
			]
		},
		"contracts/exchange/Exchange.sol": {
			"keccak256": "0x832736ae310c06eb782a3e4a25fdc700af1ed302aa1400b31cb92aab6960948e",
			"license": "MIT",
			"urls": [
				"bzz-raw://0df4ea407358676ec8d6acbfb5210f40ff372a5f1a21c0562713f2db8b4df55a",
				"dweb:/ipfs/QmTNkfFhMP62iGy8cb9SgoF4j3hEmS8Z6XfdiUAS611GFS"
			]
		},
		"contracts/exchange/ExchangeCore.sol": {
			"keccak256": "0xd85e3bee7e5e6182a995cd96653c134fabdf0a624c932736910318866fae6b7a",
			"license": "MIT",
			"urls": [
				"bzz-raw://ddc966b9e545254c24e3d3170a6c80d629b764aaf3231ec25670a42d22e89c21",
				"dweb:/ipfs/QmQUQc9g37nergP74MigbnNCvx5EW35p19bBN29mSZ5UzN"
			]
		},
		"contracts/exchange/SaleKindInterface.sol": {
			"keccak256": "0xa008a8252e3ceb042809004bf4a5e0294b26bb594779600ad8f818dfe7c704df",
			"license": "MIT",
			"urls": [
				"bzz-raw://584debf4e70021413fde7ae091222b188929d20254bc21a699b0074ad228eb58",
				"dweb:/ipfs/QmTHaAn5fwsSiuXPPRV75nHVB3eERX9BiUj2emo91P6bxu"
			]
		},
		"contracts/lib/access/Ownable.sol": {
			"keccak256": "0x1cae4f85f114ff17b90414f5da67365b1d00337abb5bce9bf944eb78a2c0673c",
			"license": "MIT",
			"urls": [
				"bzz-raw://d5ff16b336ce8f906478d5f2eecc6435e00833bdc0b92f6b209cf9e92cb5b2b7",
				"dweb:/ipfs/QmRD1rAZEqQ73C33cdA3QoUyBDMEWnNKNMc6PNkAZWHeQQ"
			]
		},
		"contracts/lib/ex/ArrayUtils.sol": {
			"keccak256": "0x9d6307baae9f791bbbc0d9b3a3c5aff038fcf05f9340dbdcd26b8d0e253a4e91",
			"license": "MIT",
			"urls": [
				"bzz-raw://6f041b2074e4fcefef63bc1c1f068f3e97596661b36d7b091ee9200a9a907ea9",
				"dweb:/ipfs/QmPTU2iqefAE2stNnXciZhmD4imjx1dpDKjojvHbbtHrm6"
			]
		},
		"contracts/lib/ex/ReentrancyGuarded.sol": {
			"keccak256": "0xb57826673a6dfc346afaaf8a93447a3c750d00e09e2df22b9d3adc2342e81013",
			"license": "MIT",
			"urls": [
				"bzz-raw://533db1c553611212ebb1a460a81ca9e6f9b8185f7675352a92dbae906eeded98",
				"dweb:/ipfs/QmSFS56RxgauRHdFMJCaPSC2ZmTWpCReWZGRCLqScXMkVt"
			]
		},
		"contracts/lib/security/Pausable.sol": {
			"keccak256": "0xab1f67e4c96dfe0e3875d22883c3dee5411914f40ce0c54ef407f030d803512e",
			"license": "MIT",
			"urls": [
				"bzz-raw://b651c0571e3ecc124b3af7a598357a19406969b21b8a3fa06eeaf5e5c9150d6c",
				"dweb:/ipfs/QmPfcAhbGVfsSd7VKet77fuST397b7XSFU2myXxLdok79v"
			]
		},
		"contracts/lib/token/ERC20/ERC20.sol": {
			"keccak256": "0xfeccdcbf67b2006a715e5af1a4c7556004d95b2806552b5cc54e46e8eb7e887b",
			"license": "MIT",
			"urls": [
				"bzz-raw://45b1f9043c0fb450272f20ed19ef633fcba1b129d602651a856dfae1a2243a2c",
				"dweb:/ipfs/QmUTSQiDikkcNtTtyDpkEwCM5ztVUUh9c1inBukn6HC5Vr"
			]
		},
		"contracts/lib/token/ERC20/IERC20.sol": {
			"keccak256": "0xf8e8d118a7a8b2e134181f7da655f6266aa3a0f9134b2605747139fcb0c5d835",
			"license": "MIT",
			"urls": [
				"bzz-raw://9ec48567e7ad06acb670980d5cdf3fd7f3949bf12894f02d68c3bb43e75aa84f",
				"dweb:/ipfs/QmaG3R2J9cz92YT77vFjYrjMNU2wHp4ypwYD62HqDUqS5U"
			]
		},
		"contracts/lib/token/ERC20/extensions/IERC20Metadata.sol": {
			"keccak256": "0x83fe24f5c04a56091e50f4a345ff504c8bff658a76d4c43b16878c8f940c53b2",
			"license": "MIT",
			"urls": [
				"bzz-raw://d4c3df1a7ca104b633a7d81c6c6f5192367d150cd5a32cba81f7f27012729013",
				"dweb:/ipfs/QmSim72e3ZVsfgZt8UceCvbiSuMRHR6WDsiamqNzZahGSY"
			]
		},
		"contracts/lib/utils/Context.sol": {
			"keccak256": "0xf930d2df426bfcfc1f7415be724f04081c96f4fb9ec8d0e3a521c07692dface0",
			"license": "MIT",
			"urls": [
				"bzz-raw://fc2bfdea0d2562c76fb3c4cf70a86c6ba25c5a30e8f8515c95aafdf8383f8395",
				"dweb:/ipfs/QmTbFya18786ckJfLYUoWau9jBTKfmWnWm5XSViWvB7PXN"
			]
		},
		"contracts/registry/AuthenticatedProxy.sol": {
			"keccak256": "0xe79f0cd4a3388d140138b7b0f2f063bfee88bd41ead693b1ede570b3c09ec6c4",
			"license": "MIT",
			"urls": [
				"bzz-raw://48c40bafd42c6ffa3c0f8c56628dd5f3938a83c9a167fc42e4f2f444bd9ff218",
				"dweb:/ipfs/QmQERQjpMDPCGcnr3cEhNhUvGJX6SL4bzbFnVTce7uiPGT"
			]
		},
		"contracts/registry/OwnableDelegateProxy.sol": {
			"keccak256": "0xe931c56a1445603e1c843f020dbfb4ac46c7c4eb87597b9b75c6eeb5d23b0c3e",
			"license": "MIT",
			"urls": [
				"bzz-raw://e1150832e030332960a239296ba7d6e1ecd9102eb735690e6c5027235cbfd10c",
				"dweb:/ipfs/QmZef3m5z3fzHUuuDVpRt5ACUfH6mczAFPqXUCnM5dRqwo"
			]
		},
		"contracts/registry/ProxyRegistry.sol": {
			"keccak256": "0x0b23efcb37f859df14a42fe1d8983bc91c28004d17bd721feccc4c5a48d5a5ed",
			"license": "MIT",
			"urls": [
				"bzz-raw://1a16fb6205397ff491988b68620b83ba2d8e5869385b80a5682c38c0d4b924ce",
				"dweb:/ipfs/QmX4gQZWaDdqKT1y2MzUGmw4tFFCQa5LM3x1jPAEeg3drU"
			]
		},
		"contracts/registry/ProxyRegistryInterface.sol": {
			"keccak256": "0x4f818bc816a40e485dcd899030d3bb67172c6f9e26714d89a0b1d9d27ce4fea9",
			"license": "MIT",
			"urls": [
				"bzz-raw://bb0b1d9c0b7dfb681a3071ddcc3e5fb2aa5484308485cee12e54ab9fda4963cb",
				"dweb:/ipfs/QmfMtyBfpUQWvx3mYvtyyLo1xmM2E9rbpPhuMyEEPP7spS"
			]
		},
		"contracts/registry/TokenRecipient.sol": {
			"keccak256": "0x9d4d207facea4e9138243b879cbc5ed9d1266d4a1d5fe6a7ea33bb31b8f77d29",
			"license": "MIT",
			"urls": [
				"bzz-raw://e6911df212b657aa0130a2b40399eec1b0258fcd119004014e0f42f44b6b255c",
				"dweb:/ipfs/QmNk42WhnrCD8FB5FXgpZ9MomEhPRYAvzc8k1u5MYURpG7"
			]
		},
		"contracts/registry/TokenTransferProxy.sol": {
			"keccak256": "0xd856d010ac559015c5ecd2dd48bb4774e05f67447b3614ddd298e28cdcc4eae6",
			"license": "MIT",
			"urls": [
				"bzz-raw://ff38e1c0d0f5796e729f3bed7246a0b577841e055d35fbdd9403d950848abbe5",
				"dweb:/ipfs/QmUF58eDqVJ5PJq35ZDxBxhsQW3MRrmNCZbe1V9jf3TFjS"
			]
		},
		"contracts/registry/proxy/OwnedUpgradeabilityProxy.sol": {
			"keccak256": "0x9c15dcd284d3e8de4619e13cbc610b9c0ef3d272b0b535e3c60a2200af87e2b7",
			"license": "MIT",
			"urls": [
				"bzz-raw://d72301ecfc1e44a51b3dc37817f33006de921723ba67cd1097aa5b62d2c50444",
				"dweb:/ipfs/QmbMvUpjod1xke6qUjuaeWeoJc9U31tkuAr8caNQB1GH29"
			]
		},
		"contracts/registry/proxy/OwnedUpgradeabilityStorage.sol": {
			"keccak256": "0xca24ed3f077a8589f876e1281cca8a0f69ea8adb0dca184b3d4859f471b0fb52",
			"license": "MIT",
			"urls": [
				"bzz-raw://9a6f4f8e9a914d5efaeb4a2111fbe157932d39954572b190f5ba85a8eb47e228",
				"dweb:/ipfs/QmfAKTy3Exry89T4Mzc2dHAkLRjB1UPqtcEHNgcDrkZWQP"
			]
		},
		"contracts/registry/proxy/Proxy.sol": {
			"keccak256": "0x5ad379da68e3fe7eb0cbe7f362b0bddf5025c42644313dc1a8b15aab12067563",
			"license": "MIT",
			"urls": [
				"bzz-raw://d605552f473e880febffa6ecbe13d5bf6afd368e9cb5e09e43a8aef774e88099",
				"dweb:/ipfs/QmRKmWf2qAjNqp3LALGxpTS9eBKCtPyQgyteZ2k9wEnCdc"
			]
		}
	},
	"version": 1
}